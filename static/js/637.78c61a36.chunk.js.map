{"version":3,"file":"static/js/637.78c61a36.chunk.js","mappings":"uMACA,EAA4B,8BAA5B,EAAiE,yBAAjE,EAA0G,kCAA1G,EAA2J,iCAA3J,EAAoM,0B,SCApM,EAAuB,wBAAvB,EAAuD,yBAAvD,EAAuF,wB,kBCoCvF,EA9BkB,SAAHA,GAAoB,IAAdC,EAAMD,EAANC,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAASC,SACrBN,EAAOO,KAAI,SAACC,GACX,OACEL,EAAAA,EAAAA,KAAA,MAAmBC,UAAWC,EAAUC,UACtCG,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CACHC,GAAE,WAAAC,OAAaJ,EAAMK,IACrBC,MAAO,CAAEC,KAAMd,GACfG,UAAWC,EAASC,SAAA,EAEpBH,EAAAA,EAAAA,KAAA,OACEa,IACER,EAAMS,YAAW,GAAAL,OAjBnB,oCAiBgCA,OAAGJ,EAAMS,aAAgBC,EAEzDC,IAAKX,EAAMY,MACXC,MAAM,QACNC,OAAO,SAERd,EAAMY,UAdFZ,EAAMK,GAkBnB,KAGN,ECuBA,EAlDmB,WAAO,IAADU,EACvBC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA/CG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAkC,QAAxBZ,EAAGK,EAAaQ,IAAI,YAAI,IAAAb,EAAAA,EAAI,GAQtCc,EAAe,eAAAtC,GAAAuC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACDC,MAAM,GAADnC,OAdlB,4CAeA,aAAAA,OAhBI,mCAgBe,0BAAAA,OAAyBuB,EAAU,gCAC5D,KAAD,EAFW,OAARO,EAAQE,EAAAI,KAAAJ,EAAAE,KAAA,EAGKJ,EAASO,OAAO,KAAD,EAAhCP,EAAQE,EAAAI,KACRd,EAAgBQ,EAASQ,SAAS,wBAAAN,EAAAO,OAAA,GAAAV,EAAA,KACnC,kBANoB,OAAA1C,EAAAqD,MAAA,KAAAC,UAAA,KAarB,OACE5C,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACEH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAcC,UAC5BG,EAAAA,EAAAA,MAAA,QAAML,UAAWC,EAAUiD,SARZ,SAACC,GACpBA,EAAEC,iBACFnB,IAAkBoB,MAAMC,QAAQC,MAClC,EAKwDrD,SAAA,EAChDH,EAAAA,EAAAA,KAAA,UAAQyD,KAAK,SAASxD,UAAWC,EAAqBC,UACpDH,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAoBC,SAAC,cAGxCH,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EACXwD,SA7Be,SAACC,GACH,KAArBA,EAAIC,OAAOC,MACPnC,EAAgB,CAAC,GACjBA,EAAgB,CAAEoC,EAAGH,EAAIC,OAAOC,OACtC,EA0BUJ,KAAK,OACLM,aAAa,MACbC,WAAS,EACTC,YAAY,sBAKjBnC,GAAgBA,EAAaoC,OAAS,GACrClE,EAAAA,EAAAA,KAACmE,EAAS,CAACtE,OAAQiC,IACjB,OAGV,C","sources":["webpack://react-app/./src/components/SearchForm/SearchForm.module.css?d6f1","webpack://react-app/./src/components/QueryList/QueryList.module.css?027b","components/QueryList/QueryList.jsx","components/SearchForm/SearchForm.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"SearchForm_searchbar__ufFAl\",\"form\":\"SearchForm_form__o80os\",\"search-button\":\"SearchForm_search-button__otKvU\",\"button-label\":\"SearchForm_button-label__wV8YD\",\"input\":\"SearchForm_input__HOxJo\"};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"QueryList_list__DAqGp\",\"movie\":\"QueryList_movie__dUVGA\",\"link\":\"QueryList_link__-Wxbw\"};","\nimport { Link, useLocation } from \"react-router-dom\";\nimport css from \"components/QueryList/QueryList.module.css\";\nimport noImage from \"img/noimage.jpeg\";\n\nconst IMG_URL = \"https://image.tmdb.org/t/p/w300/\";\n\nconst QueryList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.list}>\n      {movies.map((movie) => {\n        return (\n          <li key={movie.id} className={css.movie}>\n            <Link\n              to={`/movies/${movie.id}`}\n              state={{ from: location }}\n              className={css.link}\n            >\n              <img\n                src={\n                  movie.poster_path ? `${IMG_URL}${movie.poster_path}` : noImage\n                }\n                alt={movie.title}\n                width=\"100px\"\n                height=\"100%\"\n              ></img>\n              {movie.title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default QueryList;\n","import { useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport css from \"components/SearchForm/SearchForm.module.css\";\nimport QueryList from \"components/QueryList/QueryList\";\n\nconst API_KEY = \"7962a1912dc39a09e22d58ae0351b8bc\";\nconst URL = \"https://api.themoviedb.org/3/search/movie\";\n\nconst SearchForm = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchResult, setSearchResult] = useState(null);\n  const queryValue = searchParams.get(\"q\") ?? \"\";\n\n  const updateQueryEntry = (evt) => {\n    evt.target.value === \"\"\n      ? setSearchParams({})\n      : setSearchParams({ q: evt.target.value });\n  };\n\n  const getQueryResults = async () => {\n    let response = await fetch(\n      `${URL}?api_key=${API_KEY}&language=en-US&query=${queryValue}&page=1&include_adult=false`\n    );\n    response = await response.json();\n    setSearchResult(response.results);\n  };\n\n  const submitHandle = (e) => {\n    e.preventDefault();\n    getQueryResults().catch(console.error);\n  };\n\n  return (\n    <div>\n      <div className={css.searchbar}>\n        <form className={css.form} onSubmit={submitHandle}>\n          <button type=\"submit\" className={css[\"search-button\"]}>\n            <span className={css[\"button-label\"]}>Search</span>\n          </button>\n\n          <input\n            className={css.input}\n            onChange={updateQueryEntry}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movie\"\n          />\n        </form>\n      </div>\n\n      {searchResult && searchResult.length > 0 ? (\n        <QueryList movies={searchResult} />\n      ) : null}\n    </div>\n  );\n};\n\nexport default SearchForm;\n"],"names":["_ref","movies","location","useLocation","_jsx","className","css","children","map","movie","_jsxs","Link","to","concat","id","state","from","src","poster_path","noImage","alt","title","width","height","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","searchResult","setSearchResult","queryValue","get","getQueryResults","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","fetch","sent","json","results","stop","apply","arguments","onSubmit","e","preventDefault","catch","console","error","type","onChange","evt","target","value","q","autoComplete","autoFocus","placeholder","length","QueryList"],"sourceRoot":""}